
pipeline {
    agent {
        node {
            label "ansible"
        }
    }
	// parameters {
        
	//     choice(name: 'select_group', choices: ['dg_dev', 'wj_dev','TP_server'], description: 'select a group to install zabbix-agent')
    // }
    stages {
 
      stage("npm build"){
		   steps {
              dir("${env.WORKSPACE}/"){
                  sh "npm install"
                  sh "npm update"
                  sh "npm run build:dev"
                  
                }
			   }
		   }
        stage("deploy to the niginx server"){
            
            steps {
                
                sh "cd /home/os-srv-add.devops01/DevOps-CMDB/ansible && ansible-playbook -v -i hosts site.yml --tag 'auto_deploy_react' --extra-vars 'group=TWTPESECDEV02 port=443 vm=10.136.216.51' "
            
            }
        }

    }
    post {
    always {
        echo 'Job build is complete.'
    }
    success {
        //echo 'Job build is success.'

         emailext (
                subject: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: '''${SCRIPT, template="groovy-html.template"}''',
                to: 'tingfeng.luo@deltaww.com,V-LUKE.MW.HSU@deltaww.com',
                recipientProviders:[[$class: 'CulpritsRecipientProvider'],[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']],
                from: "SCP-Jenkins@deltaww.com"
            )

    }
    failure {
        //echo 'Job build is failure.'
        emailext (
                subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: '''${SCRIPT, template="groovy-html.template"}''',
                to: 'tingfeng.luo@deltaww.com,V-LUKE.MW.HSU@deltaww.com',
                recipientProviders:[[$class: 'CulpritsRecipientProvider'],[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']],
                from: "SCP-Jenkins@deltaww.com"
            )
    }
    unstable {
        echo 'Job build is unstable.'
    }
        
    }
}